{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","class","type","role","msg","Navbar","mode","href","title","id","aboutus","onClick","toggleMode","htmlFor","TextForm","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","useState","text","setText","style","color","heading","backgroundColor","value","onChange","Event","target","rows","newText","showAlert","console","log","document","getElementById","select","navigator","clipboard","writeText","defaultProps","App","Mode","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b88c9c5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div className=\"container my-2\">\r\n        <div\r\n          class={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.type} : </strong>\r\n          {props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutus}\r\n              </Link> */}\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutus}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {props.mode === \"light\"\r\n                ? \"Switch Dark Mode\"\r\n                : \"Switch Light Mode\"}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = { title: propTypes.string, aboutus: propTypes.string };\r\nNavbar.defaultProps = { title: \"Set title here\", aboutus: \"About text here\" };\r\n","import React, { useState } from \"react\";\r\n\r\nconsole.log();\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"button Clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to uppercase\", \"success\");\r\n  };\r\n\r\n  const handlelowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to Lowercase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (Event) => {\r\n    //console.log(\"onChange Clicked\");\r\n    setText(Event.target.value);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  };\r\n\r\n  const handleCpClick = () => {\r\n    let newText = titleCase(text);\r\n    console.log(newText);\r\n    setText(newText);\r\n    props.showAlert(\"Text Capatalized successfully\", \"success\");\r\n  };\r\n\r\n  const titleCase = (str) => {\r\n    var splitStr = str.toLowerCase().split(\" \");\r\n    for (var i = 0; i < splitStr.length; i++) {\r\n      // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n      // Assign it back to the array\r\n      splitStr[i] =\r\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n    }\r\n    // Directly return the joined string\r\n    return splitStr.join(\" \");\r\n  };\r\n\r\n  const handleCopyClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied to Clipboard\", \"success\");\r\n  };\r\n\r\n  const RemoveExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed extra spaces from text\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            <h3>{props.heading}:</h3>\r\n          </label>\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handlelowerClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n          Clear all Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCpClick}>\r\n          Capatalize the Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={RemoveExtraSpace}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container ml-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters.\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter text to preview it here\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router>\n        <Navbar\n          title=\"Text Utils\"\n          aboutus=\"About Us\"\n          mode={Mode}\n          toggleMode={toggleMode}\n        />\n        \n        <Routes>\n          <Route exact path=\"/about\" element={<About />} />\n          <Route\n            path=\"/\"\n            exact\n            element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={Mode}\n              />\n            }\n          />\n        </Routes>\n      </Router> */}\n\n      <Navbar\n        title=\"Text Utils\"\n        aboutus=\"About Us\"\n        mode={Mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <TextForm\n        showAlert={showAlert}\n        heading=\"Enter the text to analyze below\"\n        mode={Mode}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}